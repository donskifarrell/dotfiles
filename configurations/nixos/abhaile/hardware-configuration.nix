# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{
  config,
  lib,
  pkgs,
  modulesPath,
  ...
}:

{
  imports = [
    (modulesPath + "/installer/scan/not-detected.nix")
  ];

  # Use the systemd-boot EFI boot loader.
  boot = {
    loader = {
      systemd-boot.enable = true;
      systemd-boot.configurationLimit = 10;
      systemd-boot.consoleMode = "auto";
      efi.canTouchEfiVariables = true;

      # systemd-boot.memtest86.enable = true;
    };
  };

  boot.initrd.kernelModules = [
    "vfio_pci"
    "vfio"
    "vfio_iommu_type1"

    "kvmfr"
    "kvm-amd"
    "amdgpu"
  ];
  boot.initrd.availableKernelModules = [
    "vfio_pci"
    "vfio"

    "xhci_pci"
    "ahci"
    "nvme"
    "usbhid"
    "usb_storage"
    "sd_mod"
  ];

  # boot.kernelParams = [
  #   "video=efifb:off" # Prevents early framebuffer from touching dGPU
  #   # "vfio-pci.ids=1002:7550,1002:ab40" # RX 9070 GPU and HDMI audio
  # ];
  boot.extraModulePackages = [ config.boot.kernelPackages.kvmfr ];
  boot.extraModprobeConfig = ''
    # softdep amdgpu pre: vfio-pci
    options vfio-pci ids=1002:7550,1002:ab40
    options kvmfr static_size_mb=32
  '';

  fileSystems."/" = {
    device = "/dev/disk/by-uuid/8254371d-2e69-4ffd-a525-9a5403807d2a";
    fsType = "ext4";
  };

  # Note: First luks was defined in hardware-config.nix, second device was defined in config.nix..
  boot.initrd.luks.devices."luks-0bce0bcf-75c3-406c-8cc4-551fe0fe03eb".device =
    "/dev/disk/by-uuid/0bce0bcf-75c3-406c-8cc4-551fe0fe03eb";
  boot.initrd.luks.devices."luks-28fc080a-b431-4e36-8dd7-3f9eecd70275".device =
    "/dev/disk/by-uuid/28fc080a-b431-4e36-8dd7-3f9eecd70275";

  fileSystems."/boot" = {
    device = "/dev/disk/by-uuid/4F53-FD04";
    fsType = "vfat";
    options = [
      "fmask=0077"
      "dmask=0077"
    ];
  };

  swapDevices = [
    { device = "/dev/disk/by-uuid/d1a64ee4-2de7-4d6f-b0ee-19814d2fa891"; }
  ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp14s0f3u2u4.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp6s0.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp5s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.amd.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
