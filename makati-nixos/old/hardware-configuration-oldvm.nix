# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{
  config,
  lib,
  pkgs,
  modulesPath,
  ...
}: {
  imports = [
    (modulesPath + "/profiles/qemu-guest.nix")
  ];

  boot.initrd.availableKernelModules = ["ata_piix" "uhci_hcd" "virtio_pci" "floppy" "sr_mod" "virtio_blk"];
  boot.initrd.kernelModules = [];
  boot.kernelModules = ["kvm-amd"];
  boot.extraModulePackages = [];

  fileSystems."/" = {
    device = "/dev/disk/by-uuid/c81ff715-a26a-4da0-8f1d-b8df0dad8c4e";
    fsType = "ext4";
  };
  fileSystems."/".options = ["noatime" "nodiratime" "discard"];

  fileSystems."/nix/.ro-store" = {
    device = "nix-store";
    fsType = "9p";
  };

  fileSystems."/nix/.rw-store" = {
    device = "tmpfs";
    fsType = "tmpfs";
  };

  fileSystems."/tmp/shared" = {
    device = "shared";
    fsType = "9p";
  };

  fileSystems."/tmp/xchg" = {
    device = "xchg";
    fsType = "9p";
  };

  fileSystems."/nix/store" = {
    device = "overlay";
    fsType = "overlay";
  };

  swapDevices = [];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.eth0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
}
